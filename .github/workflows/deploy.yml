name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Build Docker Image (optional, if deploying to ECS)
      - name: Build Docker Image
        run: |
          docker build --no-cache -t 10277/cold-email-generator .

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker tag cold-email-generator 10277/cold-email-generator:latest
          docker push 10277/cold-email-generator:latest
      
      # Step 7: Deploy to AWS EC2 (Using Native SSH)
      - name: Deploy to EC2
        run: |
            echo "Deploying application..."
            echo "${{ secrets.EC2_SSH_KEY }}" > private_key
            chmod 600 private_key

            ssh -o StrictHostKeyChecking=yes -i private_key ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
              docker pull 10277/cold-email-generator:latest
              docker stop cold-email-generator-container || true
              docker rm cold-email-generator-container || true
              docker run -d -p 8501:8501 --name cold-email-generator-container 10277/cold-email-generator:latest
            EOF

            rm -f private_key  # Cleanup the private key after use
            echo "Deployment complete!"


     
